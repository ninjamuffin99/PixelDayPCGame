// Generated by Haxe 3.4.4
#ifndef INCLUDED_MonthArray
#define INCLUDED_MonthArray

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(MonthArray)



class HXCPP_CLASS_ATTRIBUTES MonthArray_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef MonthArray_obj OBJ_;
		MonthArray_obj();

	public:
		enum { _hx_ClassId = 0x0653d259 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="MonthArray")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"MonthArray"); }

		hx::ObjectPtr< MonthArray_obj > __new() {
			hx::ObjectPtr< MonthArray_obj > __this = new MonthArray_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< MonthArray_obj > __alloc(hx::Ctx *_hx_ctx) {
			MonthArray_obj *__this = (MonthArray_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MonthArray_obj), false, "MonthArray"));
			*(void **)__this = MonthArray_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MonthArray_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MonthArray","\x59","\xd2","\x53","\x06"); }

		static void __boot();
		static ::Array< ::String > months;
};


#endif /* INCLUDED_MonthArray */ 
