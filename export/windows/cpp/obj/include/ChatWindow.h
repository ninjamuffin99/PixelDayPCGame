// Generated by Haxe 3.4.4
#ifndef INCLUDED_ChatWindow
#define INCLUDED_ChatWindow

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_Window
#include <Window.h>
#endif
HX_DECLARE_CLASS0(ChatWindow)
HX_DECLARE_CLASS0(Window)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES ChatWindow_obj : public  ::Window_obj
{
	public:
		typedef  ::Window_obj super;
		typedef ChatWindow_obj OBJ_;
		ChatWindow_obj();

	public:
		enum { _hx_ClassId = 0x10881d08 };

		void __construct(hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y,hx::Null< int >  __o_width,hx::Null< int >  __o_height,::String __o_name,hx::Null< int >  __o_color);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ChatWindow")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"ChatWindow"); }
		static hx::ObjectPtr< ChatWindow_obj > __new(hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y,hx::Null< int >  __o_width,hx::Null< int >  __o_height,::String __o_name,hx::Null< int >  __o_color);
		static hx::ObjectPtr< ChatWindow_obj > __alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_X,hx::Null< Float >  __o_Y,hx::Null< int >  __o_width,hx::Null< int >  __o_height,::String __o_name,hx::Null< int >  __o_color);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ChatWindow_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ChatWindow","\x08","\x1d","\x88","\x10"); }

		::Array< ::String > chatArray;
		::Array< ::String > textArray;
		Float chatCutoff;
		 ::flixel::text::FlxText grpChat;
		 ::flixel::group::FlxTypedSpriteGroup grpButtons;
		bool erasing;
		void initChat();
		::Dynamic initChat_dyn();

		bool finalFileExists;
		void initButtons();
		::Dynamic initButtons_dyn();

		int aliveNum;
		void checkCount( ::flixel::FlxSprite b);
		::Dynamic checkCount_dyn();

		void revive();

		void newChat();
		::Dynamic newChat_dyn();

		Float chatTimer;
		void update(Float elapsed);

		void addText();
		::Dynamic addText_dyn();

};


#endif /* INCLUDED_ChatWindow */ 
